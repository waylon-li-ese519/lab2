/* ESE519
 * partd.c
 *
 * Created: 10/1/2020 12:12:25 AM
 * Author : Weilun Li
 */ 



#define F_CPU 16000000UL
#define BAUD_RATE 9600
#define BAUD_PRESCALER (((F_CPU / (BAUD_RATE * 16UL))) - 1) /* copy from main.c in uart session. Definitions.*/

#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>
#include <stdlib.h>
#include <stdio.h>
#include "uart.h"
char String[10];
int edge1= 0;
int edge2=0;
int period1= 0;
int period2= 0;
int ovf = 0;

void Initialize ()
{
    cli();
	DDRB  &=~(1<<DDB0);
	DDRB |= (1<<DDB5);
	/* The LED is set initially on,so during the rising edge the LED will be turned off.*/
	
	TCCR1B |= (1<<CS10);
	TCCR1B &= ~1<<(CS11);
	TCCR1B &= ~1<<(CS12);/* Set timer 1 clock to be internal no prescaling*/
	
	TCCR1A &= ~(1<<WGM10);
	TCCR1A &= ~(1<<WGM11);
	TCCR1B &= ~(1<<WGM12);
	TCCR1B &= ~(1<<WGM13);/* Set timer 1 to Normal*/
	TCCR1B |= (1<<ICES1);/* Looking for the rising edge.*/
	TIMSK1 |=(1<<TOIE1); /* Enable overflow interrupt*/
	TIMSK1 |= (1<<ICIE1);/*Enable interrupt.*/
	sei(); /* Enable global interrupts.*/
	
}
	//R(TIMER1_OVF_vect)
//
	//vf++;
//
	

    ISR(TIMER1_CAPT_vect)
{

sprintf(String,"space %X\n", ICR1);
UART_putstring(String);
	TIFR1 |= (1<<ICF1);		//Clear interrupt flag
	PORTB ^= (1<<PORTB5);	//Toggle LED
    
	TCCR1B ^= (1<<ICES1);	//Toggle ICES1 (Rising and Falling Edge)
	}
	

int main (void)
{   Initialize();
	UART_init(BAUD_PRESCALER);
	while (1)
	{
	}
    PORTB |= (1<<PORTB5);
	_delay_ms(1000);
	PORTB &= ~(1<<PORTB5);
	_delay_ms(1000);

}
